!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("jQuery"));else if("function"==typeof define&&define.amd)define(["jQuery"],e);else{var i=e("object"==typeof exports?require("jQuery"):t.jQuery);for(var n in i)("object"==typeof exports?exports:t)[n]=i[n]}}(this,function(t){return function(t){function e(n){if(i[n])return i[n].exports;var o=i[n]={exports:{},id:n,loaded:!1};return t[n].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var i={};return e.m=t,e.c=i,e.p="",e(0)}([function(t,e,i){var n=i(1),o=i(2),r="_ellipsisWidthInstance",s={replace:"...",position:"after",path:!1,pathSeparator:"/",rerenderOnResize:!1},h=[];n(window).resize(function(){0!==h.length&&h.forEach(function(t){n.contains(document,t.get(0))&&t.text(this.data(r).getResult())})}),n.fn.ellipsisWidth=function(t){if(this.length>1)return this.each(function(e,i){n(i).ellipsisWidth(t)}),this;var e={};"number"==typeof t?n.extend(e,s,{width:t}):n.extend(e,s,t),e.width||(e.width=this.width()),e.newText||(e.newText=this.text());var i=new o(this.get(0),e);if(this.text(i.getResult()),e.rerenderOnResize)this.data(r,i),h.indexOf(this)===-1&&h.push(this);else{var p=h.indexOf(this);p>-1&&h.splice(p,1)}return this}},function(e,i){e.exports=t},function(t,e,i){var n=i(4),o=i(5),r=i(6),s=function(t,e){this.el=t,this.option=e,this.setStringWidth(),this.setCutter()};s.prototype={getResult:function(){this.cutter.excute(this.option.newText)},setStringWidth:function(){this.stringWidth=function(t){return n(this,t)}.bind(this)},setCutter:function(){var t;t=this.option.path?new r(this.option.pathSeparator):new o,t.setReplace(this.option.replace),t.setWidth(this.option.width),t.setPosition(this.option.position),t.setStringWidth(this.stringWidth),this.cutter=t}},t.exports=s},,function(t,e){var i=document.createElement("canvas").getContext("2d");t.exports=function(t,e){if("string"!=typeof e&&!e.toString)throw new Error("stringWidth : current param is not stringify.");"string"!=typeof e&&e.toString&&(console.warn||console.log)("stringWidth : current param is not string, but has 'toString()'");var n=window.getComputedStyle(t);return i.font=n.fontStyle+" "+n.fontVariant+" "+n.fontWeight+" "+n.fontSize+" / "+n.lineHeight+" "+n.fontFamily,i.measureText(e.replace(/^\s+/gm,"").replace(/\s+$/," ")).width}},function(t,e){var i=function(){};i.prototype={setWidth:function(t){this.width=t},setReplace:function(t){this.replace=t},setPosition:function(t){this.position=position},setStringWidth:function(t){this.stringWidth=t},excute:function(t){var e=this.stringWidth(t);if(e<=this.width)return t;this.width/(this.stringWidth(t)/t.length)}},t.exports=i},function(t,e,i){var n=i(5),o=function(){};o.prototype=Object.create(n.prototype),t.exports=o}])});